// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SupplierDao is the data access object for table supplier.
type SupplierDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns SupplierColumns // columns contains all the column names of Table for convenient usage.
}

// SupplierColumns defines and stores column names for table supplier.
type SupplierColumns struct {
	SupplierId        string // 供应商ID
	SupplierName      string // 供应商名称
	SupplierDesc      string // 供应商描述
	SupplierTelephone string // 供应商座机号码
	SupplierPhone     string // 供应商手机号码
	SupplierAddress   string // 供应商地址
	SupplierStatus    string // 供应商状态
}

// supplierColumns holds the columns for table supplier.
var supplierColumns = SupplierColumns{
	SupplierId:        "supplier_id",
	SupplierName:      "supplier_name",
	SupplierDesc:      "supplier_desc",
	SupplierTelephone: "supplier_telephone",
	SupplierPhone:     "supplier_phone",
	SupplierAddress:   "supplier_address",
	SupplierStatus:    "supplier_status",
}

// NewSupplierDao creates and returns a new DAO object for table data access.
func NewSupplierDao() *SupplierDao {
	return &SupplierDao{
		group:   "default",
		table:   "supplier",
		columns: supplierColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SupplierDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SupplierDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SupplierDao) Columns() SupplierColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SupplierDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SupplierDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SupplierDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
