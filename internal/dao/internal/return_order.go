// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ReturnOrderDao is the data access object for table return_order.
type ReturnOrderDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns ReturnOrderColumns // columns contains all the column names of Table for convenient usage.
}

// ReturnOrderColumns defines and stores column names for table return_order.
type ReturnOrderColumns struct {
	OrderId          string // 单据ID
	OrderNo          string // 单号
	OrderType        string // 单据类型
	POrderNo         string // 源单据号
	OrderAmount      string // 退货总金额
	OrderQuantity    string // 退货总数
	CreateTime       string // 制单时间
	CreateUser       string // 制单人
	CompleteTime     string // 完成时间
	CompleteUser     string // 操作员
	Notes            string // 备注
	OrderStatus      string // 单据状态
	CreateUserName   string // 制单人姓名
	CompleteUserName string // 完成人姓名
}

// returnOrderColumns holds the columns for table return_order.
var returnOrderColumns = ReturnOrderColumns{
	OrderId:          "order_id",
	OrderNo:          "order_no",
	OrderType:        "order_type",
	POrderNo:         "p_order_no",
	OrderAmount:      "order_amount",
	OrderQuantity:    "order_quantity",
	CreateTime:       "create_time",
	CreateUser:       "create_user",
	CompleteTime:     "complete_time",
	CompleteUser:     "complete_user",
	Notes:            "notes",
	OrderStatus:      "order_status",
	CreateUserName:   "create_user_name",
	CompleteUserName: "complete_user_name",
}

// NewReturnOrderDao creates and returns a new DAO object for table data access.
func NewReturnOrderDao() *ReturnOrderDao {
	return &ReturnOrderDao{
		group:   "default",
		table:   "return_order",
		columns: returnOrderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ReturnOrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ReturnOrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ReturnOrderDao) Columns() ReturnOrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ReturnOrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ReturnOrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ReturnOrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
