// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SaleOrderDao is the data access object for table sale_order.
type SaleOrderDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns SaleOrderColumns // columns contains all the column names of Table for convenient usage.
}

// SaleOrderColumns defines and stores column names for table sale_order.
type SaleOrderColumns struct {
	OrderId       string // 单据ID
	OrderNo       string // 单号
	CustomerId    string // 客户ID
	CustomerName  string // 客户名称
	OrderQuantity string // 采购数量
	OrderAmount   string // 采购总金额
	CreateTime    string // 制单时间
	CreateUser    string // 制单人
	CompleteTime  string // 完成时间
	CompleteUser  string // 操作员
	Notes         string // 备注
	OrderStatus   string // 单据状态
}

// saleOrderColumns holds the columns for table sale_order.
var saleOrderColumns = SaleOrderColumns{
	OrderId:       "order_id",
	OrderNo:       "order_no",
	CustomerId:    "customer_id",
	CustomerName:  "customer_name",
	OrderQuantity: "order_quantity",
	OrderAmount:   "order_amount",
	CreateTime:    "create_time",
	CreateUser:    "create_user",
	CompleteTime:  "complete_time",
	CompleteUser:  "complete_user",
	Notes:         "notes",
	OrderStatus:   "order_status",
}

// NewSaleOrderDao creates and returns a new DAO object for table data access.
func NewSaleOrderDao() *SaleOrderDao {
	return &SaleOrderDao{
		group:   "default",
		table:   "sale_order",
		columns: saleOrderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SaleOrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SaleOrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SaleOrderDao) Columns() SaleOrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SaleOrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SaleOrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SaleOrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
